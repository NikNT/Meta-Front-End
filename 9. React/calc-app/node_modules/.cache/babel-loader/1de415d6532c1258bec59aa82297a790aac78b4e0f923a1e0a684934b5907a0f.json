{"ast":null,"code":"var _jsxFileName = \"D:\\\\Meta\\\\9. React\\\\calc-app\\\\src\\\\App.js\";\nimport { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hey\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n}\n\n// function App() {\n//   const inputRef = useRef(null);\n//   const resultRef = useRef(null);\n//   const [result, setResult] = useState(0);\n\n// function minus(e) {\n//     e.preventDefault();\n//     setResult((result) => result - Number(inputRef.current.value));\n//   }\n\n//   function times(e) {\n//     e.preventDefault();\n//     setResult((result) => result * Number(inputRef.current.value));\n//   }\n\n//   function divide(e) {\n//     e.preventDefault();\n//     setResult((result) => result / Number(inputRef.current.value));\n//   }\n\n//   function resetInput(e) {\n//     e.preventDefault();\n//     inputRef.current.value = \"\";\n//   }\n\n//   function resetResult(e) {\n//     e.preventDefault();\n//     setResult(0);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div>\n//         <h1>Simplest Working Calculator</h1>\n//       </div>\n//       <form>\n//         <p ref={resultRef}>{result}</p>\n//         <input\n//           pattern=\"[0-9]\"\n//           ref={inputRef}\n//           type=\"number\"\n//           placeholder=\"Type a number\"\n//         />\n//         <button onClick={plus}>add</button>\n//         <button onClick={minus}>subtract</button>\n//         <button onClick={times}>multiply</button>\n//         <button onClick={divide}>divide</button>\n//         <button onClick={resetInput}>reset input</button>\n//         <button onClick={resetResult}>reset result</button>\n//       </form>\n//     </div>\n//   );\n// }\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Meta/9. React/calc-app/src/App.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  <h1>Hey</h1>;\n}\n\n// function App() {\n//   const inputRef = useRef(null);\n//   const resultRef = useRef(null);\n//   const [result, setResult] = useState(0);\n\n// function minus(e) {\n//     e.preventDefault();\n//     setResult((result) => result - Number(inputRef.current.value));\n//   }\n\n//   function times(e) {\n//     e.preventDefault();\n//     setResult((result) => result * Number(inputRef.current.value));\n//   }\n\n//   function divide(e) {\n//     e.preventDefault();\n//     setResult((result) => result / Number(inputRef.current.value));\n//   }\n\n//   function resetInput(e) {\n//     e.preventDefault();\n//     inputRef.current.value = \"\";\n//   }\n\n//   function resetResult(e) {\n//     e.preventDefault();\n//     setResult(0);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div>\n//         <h1>Simplest Working Calculator</h1>\n//       </div>\n//       <form>\n//         <p ref={resultRef}>{result}</p>\n//         <input\n//           pattern=\"[0-9]\"\n//           ref={inputRef}\n//           type=\"number\"\n//           placeholder=\"Type a number\"\n//         />\n//         <button onClick={plus}>add</button>\n//         <button onClick={minus}>subtract</button>\n//         <button onClick={times}>multiply</button>\n//         <button onClick={divide}>divide</button>\n//         <button onClick={resetInput}>reset input</button>\n//         <button onClick={resetResult}>reset result</button>\n//       </form>\n//     </div>\n//   );\n// }\n\nexport default App;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EACb,aAAAD,OAAA;IAAAE,QAAA,EAAI;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACd;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GAxDSN,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}